<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprC1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>orgSprite = sprite_index;

isPolice = false;
depth = -6;
//image_index = random(image_number);
image_speed = 0;

topSpeed = 0;
size = 1;
slow = 0;

turnSp = 1;
dir = 0;
face = 0;

accel = 0.1;
width = 0;

shieldMax = 0;
shield = 0;
shieldN = 0;
persist = false;
shieldDown = false;

capacitorMax = 0;
capacitor = 0;

limgangle = 0;
iindex = 0;
ascend = 0;

gear = 0;
col = c_white;

dialog = "";
dialogT = 0;

stop = false;
mountNum = 0;

mount0 = noone;
mount1 = noone;
mount2 = noone;
mount3 = noone;

hp = 0;
target = noone;

falling = false;
fall = 0;

fa = true;
outSync = false;

frenzy = false;
chaffing = false;

smoking = false;
blinded = false;

boost = 0;
boostCD = 0;

alarm[1] =1;
policeTimer = 3000;
shieldHullRatio = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &lt;= 0){
    p = particleSpawn(1, direction - 180, 16, sprExplosion, 0);
    p.image_index = 0;
    p.image_speed = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>chaffing = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>getCar(sprite_get_name(sprite_index));
orgSprite = sprite_index;
if (id != Player.id &amp;&amp; size &lt; 2)
    topSpeed *= 0.7;
    
if (isPolice){
    turnSP *= 0.7;
}
/*str = "borange"//+ choose("", "", "", "", "", "blue", "borange", "bblue", "bwhite");
sprite_index = asset_get_index(sprite_get_name(sprite_index) + str);
if (sprite_index &lt; 0)
    show_message(sprite_get_name(sprite_index) + ", " + str);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blinded = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iindex = 0;
if (gear &gt; 0)
    iindex = 1;
 
if (ascend &gt; 0)
    iindex = 4;
if(ascend &lt; 0)
    iindex = 5;
    
ascend = 0;   
 
if (image_angle &gt; limgangle)
    iindex = 2;

if (image_angle &lt; limgangle)
    iindex = 3;

limgangle = image_angle;

chaffing = false;
smoking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != game)
    exit;
if (Stop.x &gt; x &amp;&amp; Stop.x - x &lt; 800)
    stop = true;
    
if(shield &lt; shieldMax)
    shield += 0.1;

if (shieldDown &amp;&amp; shield &gt; shieldMax/2)
    shieldDown = false;
    
if (capacitor &lt; capacitorMax)
    capacitor += capacitorMax*0.02;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (falling){
    outSync = true;
    //fa = false;
    if (getY()&lt; 1000){
        falling = false;
        fall = 0;
    }
    //fall += accel*2;
    motion_add(270, accel*2)
}
if (getY() &gt; 1000)
    falling = true;
   /*image_xscale = size;
image_yscale = size;*/

policeTimer --;
boostCD--;

dir = 0;
width= sprite_get_width(sprite_index)*2;
height = sprite_height;
keepstill = false;
if (!blinded)
for (i = 0; i &lt; instance_number(Car); i ++){
    c = instance_find(Car, i);
    if (c.id == id)
        continue;
        
    if (checkSmoke(c)){
        dialogT = 60;
        dialog = getBlinded();
        blinded = true;
        alarm[0] = 100;
        break;
    }
    if (c == target)
        continue;
        
    if !(size &lt;= c.size &amp;&amp; ((c.bbox_left - bbox_right &lt; width &amp;&amp; ((abs(c.bbox_bottom - bbox_top)) &lt; width) || (abs(bbox_bottom - c.bbox_top)) &lt; width) ))
        continue;
        
    dis = distance_to_object(c);
    if (dis &lt; width){
        if (c.x &gt; x &amp;&amp; c.stop)
            stop = true;
    
        //"nudge" the car away from others
        dx = c.x - x;
        dy = c.y - y;
        
        if (dx = 0)
            dx = 1;
        
        //if (dis &lt; 10 || speed == 0)
          //  continue;
        if (dis = 0)
            dis = 10;
            
        /*if (dialogT &lt;= 0  &amp;&amp; dis &lt; width/2){
            if (speed &lt; 22) &amp;&amp; (c.speed &gt; 22)
                dialog = getComplain();
            if (speed &gt; 22)
                dialog = getExcuse();
            dialogT = 60;
        }*/
        
        if (dis &lt; width/2){
        if (y &lt; c.y)
            ascend = 1;
        if (y &gt; c.y)
            ascend = -1;
        
        if !(Stop.x - x &gt; 300)
            continue;
            
        x -= dx/dis*(0.1)* (1 - dis/width);//* (1 - dis/width)
        y -= dy/dis*(0.1)* (1 - dis/width);
    
        }
        
        //turning slightly if target is in front
        if (c.x &lt; x)
            continue;
        
           change = 0;
        if (dy &lt; 0 &amp;&amp; abs(dy/dx) &lt; 0.8)
            change = 1;
        else if (dy &gt;=0 &amp;&amp; dy/dx &lt; 0.8)
            change = 2;
        
        if (change == 1 &amp;&amp; dir &gt; 0) || (change == 2 &amp;&amp; dir &lt; 0){
            keepstill = true;
            dir = 0;
            }else
            slow = 45;
        
        hwidth = width/2;
       // col = c_white;
        switch change{
            case 1: if (collision_rectangle(x - hwidth,y + height,x + hwidth, y + height*2, Car, 0, 1)&lt; 0 &amp;&amp;  y &lt; room_height - sprite_height*2)  dir = -20/size; break;
            case 2: if (collision_rectangle(x - hwidth,y - height,x + hwidth, y - height*2, Car, 0, 1)&lt; 0 &amp;&amp; y &gt; sprite_height*2)  dir = 20/size; break;
            }
    }
}

if (!instance_exists(target)){
    if (getY() &gt; 900 &amp;&amp; dir &gt; 0)
        dir = -20/size;
    if (getY() &lt; -1300 &amp;&amp; dir &lt; 0)
        dir = 20/size;
}else{ 
    if (target.x &gt; x &amp;&amp; target.x &lt; x + 300)
       if (gear &gt; target.speed)
            gear = target.speed;

    if (target.x + 200 &gt; x &amp;&amp; ! blinded &amp;&amp; size &lt; 2){
    //turn to target;
    hwidth = width/2;
    if (dir == 0){
        change = 0;
        if (y &lt; target.y)
            change = 1
        if (y &gt; target.y)
            change = 2;
        pd = point_direction(x, y, target.x, target.y);
        ty = target.y;
        target.y = -50000;
        switch change{
            case 1: if (collision_rectangle(x - hwidth,y + height,x + hwidth, y + height*2, Car, 0, 1)&lt; 0) dir = pd; break;
            case 2: if (collision_rectangle(x - hwidth,y - height,x + hwidth, y - height*2, Car, 0, 1)&lt; 0) dir = pd; break;
        }
        target.y = ty;
    }
}
}
    
/*if (slow &gt; 0){
    gear = topSpeed/2;
    slow --;
    }
else*/

fa = true;
if (!stop &amp;&amp; !blinded){
    gear = topSpeed;
    if (instance_exists(target)){
        if (target.x + 200 &lt; x ||(target.x &lt; x &amp;&amp; lineofSight(target) &gt;= 0))
            gear = -topSpeed/2;
        else if (abs(target.x - x) &lt; 600 &amp;&amp; abs(target.y - y) &lt; 350 ){
            gear = target.speed;
            if (abs(angle_difference(direction, point_direction(x, y, target.x, target.y))) &gt; 5 &amp;&amp; lineofSight(target) &lt; 0){
                fa = false;
                outSync = true;
            }
        }
    }
}
else{
    gear = 0;
    if (Stop.x &lt; x || Stop.x - x &gt;400)
        stop = false;
}

if (boost &gt; 0){
    if (capacitor &lt; capacitorMax*0.03){
        boost = 0;
    }else{
    topSpeed *= 1.25;
    accel *= 1.25;
    gear = topSpeed;
    capacitor -= capacitorMax*0.03;
    }
}

if (policeTimer &lt; 0 &amp;&amp; isPolice){
    target = noone;
    gear = 0;
}

//check flight assists
if (!fa){
    if (speed &gt; gear)
    speed -= accel;
    motion_add(dir, accel);
    motion_add(270, accel/2)
       // col = c_red
}else{
    
    if (!outSync &amp;&amp; !falling){
    if (speed &gt; gear)
        speed -= accel;
    else if (speed &lt; gear)
        speed += accel;
    //col = c_yellow;
    direction = face;
    }else{
    dir = direction;
    if (speed &gt; gear)
        speed -= accel*2;
    //else if (speed &lt; gear)
       // speed += accel;
        motion_add(face, accel*2);
        if (!falling)
        direction = getTurn(direction, dir, turnSp/4)
        if !falling &amp;&amp; abs(angle_difference(face, direction)) &lt; 10
           outSync = false;
        //col = c_black
    }
}
    
if (x &lt; -1000 or x &gt; 2500) &amp;&amp; !persist{
    if (!isPolice || (isPolice &amp;&amp; x &lt; -4000))
        instance_destroy();
}

if (frenzy &amp;&amp; !blinded){
    gear = topSpeed*1.5;    
    if (dialogT &lt;= 0){
        dialogT = 120;
        dialog = getFrenzy();
    }
}

if (isPolice &amp;&amp; dialogT &lt;= 0){
    dialogT = 120;
    dialog = getPoliceDialog();
}

if (dir != face){
    if (fa)
        face = getTurn(face, dir, turnSp);
    else
        face = getTurn(face, dir, turnSp*2);
}

image_angle = face;
if (boost &gt; 0){
    topSpeed /= 1.25;
    accel /= 1.25;
    gear = topSpeed -1;
   boost --;
   if (boost &lt;= 0)
    boostCD = 32;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Car">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if (size &lt;= other.size)
        move_outside_all(point_direction(other.x, other.y,x, y), 8);
   
   if (dialogT &lt;= 0 &amp;&amp; !frenzy){
   if (speed &gt; other.speed)
        dialog = getExcuse();
   else
         dialog = getComplain();
   dialogT = 60;
   }
        /*d = point_direction(x,y, other.x, other.y);
        x += lengthdir_x(speed/2, d+180);
        y += lengthdir_y(speed/2, d+180);*/
        
        slow = 30;
        pd = point_direction(x,y,other.x, other.y);
        ad = abs(angle_difference(direction, other.direction));
        if (other.size &gt;= size/* &amp;&amp; ad &lt; 90*/){
            if (ad &lt; 90){
            speed -= speed/2*(1-ad/90);
           if (y &lt; other.y)
            direction += 25*(1 - ad/90);
           else
            direction -= 25*(1 - ad/90);
           }
           else{
            speed /= 2;
           }
            //fa = false;
            outSync = true;   
        }
            
        if (size &lt; other.size)
            if(y &gt; other.y)
                y += 3;
            else
                y -= 3;
   if (instance_exists(other.id)&amp;&amp; instance_exists(id) &amp;&amp; size == other.size)
    damageGivePassive(other.id, abs(other.speed - speed)/2, id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (self != Player)
//    Player.target = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (chaffing)
  //  col = c_yellow
if (chaffing)
    chaffing --;

//col = c_white  
draw_sprite_ext(sprite_index, iindex, x, y, 1, 1, image_angle, col, 1);

if (dialogT &gt; 0){
tw = string_width(dialog);
th = string_height(dialog);

if (id != Player.id){
    drawWhite(x - tw/2, y - sprite_height/2 - th, tw, th, 0.5);
    draw_text(x - tw/2, y - sprite_height/2 - th, dialog);
}else{
    drawColor(x - tw/2, y - sprite_height/2 - th, tw, th, 0.5, c_black);
    draw_set_color(c_white)
    draw_text(x - tw/2, y - sprite_height/2 - th, dialog);
    draw_set_color(c_black)
}

dialogT --;
}else
dialog = "";


if (outSync || !fa){
    draw_set_color(c_orange);
    draw_line_colour(x,y, x + lengthdir_x(50, direction), y + + lengthdir_y(50, direction), c_orange, c_silver);
}

if (instance_exists(mount0)){
   // if (isPolice)
       // show_message(object_get_name(mount0.object_index));
    mount0.x = x + lengthdir_x(mount0.dis, mount0.angle + image_angle);
    mount0.y = y + lengthdir_y(mount0.dis, mount0.angle + image_angle);
    draw_sprite_ext(mount0.sprite_index, mount0.image_index, mount0.x, mount0.y, 1,1, mount0.face + image_angle, c_white, 1);
    if (id == Player.id)
        drawAmmo(mount0, 0);
}

if (instance_exists(mount1)){
    mount1.x = x + lengthdir_x(mount1.dis, mount1.angle + image_angle);
    mount1.y = y + lengthdir_y(mount1.dis,mount1. angle + image_angle);
    draw_sprite_ext(mount1.sprite_index, mount1.image_index, mount1.x, mount1.y, 1,1, mount1.face + image_angle, c_white, 1);
    if (id == Player.id)
        drawAmmo(mount1, 1);
}

if (instance_exists(mount2)){
    mount2.x = x + lengthdir_x(mount2.dis, mount2.angle + image_angle);
    mount2.y = y + lengthdir_y(mount2.dis,mount2. angle + image_angle);
    draw_sprite_ext(mount2.sprite_index, mount2.image_index, mount2.x, mount2.y, 1,1, mount2.face + image_angle, c_white, 1);
    if (id == Player.id)
        drawAmmo(mount2, 2);
}

if (instance_exists(mount3)){
    mount3.x = x + lengthdir_x(mount3.dis, mount3.angle + image_angle);
    mount3.y = y + lengthdir_y(mount3.dis,mount3. angle + image_angle);
    draw_sprite_ext(mount3.sprite_index, mount3.image_index, mount3.x, mount3.y, 1,1, mount3.face + image_angle, c_white, 1);
    if (id == Player.id)
        drawAmmo(mount3, 3);
}

if (!instance_exists(Player))
    exit;
if(x &lt; 0 &amp;&amp; target == Player){
        yy = y;
        if(yy&gt;room_height)
            yy = room_height;
        if (yy &lt; 0)
            yy = 0;
            

        text = string(Player.x - x - room_width/2) + ", " +string(y-Player.y ) + ", " + string(speed); 
        draw_sprite(sprArrow, 0, 0, yy);
    

        tw = string_width(text);
        th = string_height(text);
        drawWhite(50, yy -  th, tw, th, 0.5);
        draw_text(50, y-th, text);
    
}else if(x &gt; room_width &amp;&amp; target == Player){
        yy = y;
        if(yy&gt;room_height)
            yy = room_height;
        if (yy &lt; 0)
            yy = 0;
            

        text = string(x - Player.x - room_width/2) + ", " +string(y-Player.y ) + ", " + string(speed); 
        draw_sprite(sprArrow, 1, room_width - 16, yy);
    

        tw = string_width(text);
        th = string_height(text);
        drawWhite(room_width - 50 - tw, yy -  th, tw, th, 0.5);
        draw_text(room_width - 50 - tw, y-th, text);
    
}else if(y &gt; room_height &amp;&amp; target == Player &amp;&amp; x &lt; room_width &amp;&amp; x &gt; 0 ){
        /*yy = y;
        if(yy&gt;room_height)
            yy = room_height;
        if (yy &lt; 0)
            yy = 0;*/
            

        text = string(y - Player.y + room_height/2) + ", " + string(speed); 
        draw_sprite(sprArrow, 2, x, room_height - 16);
    

        tw = string_width(text);
        th = string_height(text);
        drawWhite(x - tw/2, room_height - 50, tw, th, 0.5);
        draw_text(x - tw/2, room_height - 50, text);
    
}else if(y  &lt; 0 &amp;&amp; target == Player &amp;&amp; x &lt; room_width &amp;&amp; x &gt; 0 ){
        /*yy = y;
        if(yy&gt;room_height)
            yy = room_height;
        if (yy &lt; 0)
            yy = 0;*/
            

        text = string(Player.y - y - room_height/2) + ", " + string(speed); 
        draw_sprite(sprArrow, 3, x, 16);
    

        tw = string_width(text);
        th = string_height(text);
        drawWhite(x - tw/2, 50, tw, th, 0.5);
        draw_text(x - tw/2, 50, text);
    
}

if (shieldN &gt; 0){
    spriteShield = asset_get_index(sprite_get_name(orgSprite) + "S");
    if (spriteShield &lt; 0)
        show_message(sprite_get_name(orgSprite) + "S");
    else
    draw_sprite_ext(spriteShield, 0, x, y, 1, 1, image_angle, c_white, 1);
    shieldN --;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
