<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprText</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprText, 0 ,360, 50);
if (!instance_exists(display))
    exit;

caption = "";
temp = noone;
width = string_width("Fire Rate:  |");
switch (display.object_index){
    case btMount: caption = getMountCap(); break;
    case btTool: 
        temp = instance_create(0,0, display.tool);
        caption = getToolCap(display.tool); 
        if (temp.firerate == 0 || temp.firerate == temp.fireTime)
            temp.firerate = temp.fireTime + 1;
        
        draw_text(370, 60, "Fire Rate: ");
        drawHB((1 - temp.firerate/35)*100, 370 + width, 60);
        draw_text(370, 80, "Damage(x" + string(temp.fireNum)+"): ");
        drawHB((temp.damage/50)*100, 370 + width, 80);
        draw_text(370, 100, "DPS(x" + string(temp.fireNum)+"): ");
        drawHB((temp.damage)*(32/(temp.firerate+1 - temp.fireTime))/90*100, 370 + width, 100);
        draw_text(370, 120, "Energy: ");
        drawHB(temp.capacitor/(temp.firerate - temp.fireTime)/6*100, 370 + width, 120);
        if (temp.clipSize &gt; 0)
            draw_text(370, 140, "Clip Size/Total Ammo: " + string(temp.clipSize) + "/" + string(temp.ammoMax));;
        break;
    case btType: caption = getTypeCap(display.type);  break;
    case btMouse: caption = getMouseCap(display.image_index);  break;
    case btMode: caption = getModeCap(display.image_index); break;
    case PlaceHolder: 
        caption = getCarCap(display.orgSprite); 
        temp = getCarObj(sprite_get_name(display.orgSprite));
        draw_text(370, 60, "Top Speed: ");
        drawHB((temp.topSpeed/35)*100, 370 + width, 60);
        draw_text(370, 80, "Acceleration: ");
        drawHB((temp.accel/0.2)*100, 370 + width, 80);
        draw_text(370, 100, "Handling: ");
        drawHB((temp.turn/2)*100, 370 + width, 100);
        draw_text(370, 120, "Hull: ");
        drawHB((temp.hpMax/300)*100, 370 + width, 120);
        draw_text(370, 140, "Shield: ");
        drawHB((temp.shieldMax/200)*100, 370 + width, 140);
        draw_text(370, 160, "Capacitor: ");
        drawHB((temp.capacitorMax/300)*100, 370 + width, 160);
        break;
}

if (instance_exists (temp))
    with (temp) instance_destroy();

draw_set_color(c_black)
draw_set_alpha(1)
draw_text_ext(370, room_height/2, caption, -1, 250);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
