<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprC3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>Car</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
gamemode = 0;

accel = 0.1;
turn = 2;

maxSp = 23;
dir = 0;

ver = 0;
hor = 0;
gear = 0;

fa = true;
outSync = false;
//col = c_yellow;

mountNum = 1;
mount0 = createTool(Lazer, 0);
mount0.isTurret = true;
energyBonus = 0;
score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(btMode))
    gamemode = btMode.image_index;
    
if (energyBonus &gt; 0){
    energyBonus--;
    capacitor = capacitorMax;
    shieldN = 1;
}
    
if (room != game)
    exit;
if (keyboard_check(vk_tab) &amp;&amp; boost &lt;= 0 &amp;&amp; boostCD &lt;= 0)
    boost = 64;

boostCD --;
tturn = turn;
hsp = maxSp/2;
turn += turn*(1 - abs(gear - hsp)/hsp);

if (falling){
    outSync = true;
    //fa = false;
    if (Control.verCurrent &lt; 1000){
        falling = false;
        fall = 0;
    }
    //fall += accel*2;
    motion_add(270, accel*2)
}
if (Control.verCurrent &gt; 1000)
    falling = true;


if (!fa)
    turn *= 2;

if (keyboard_check(ord("W")) || keyboard_check(vk_up)) &amp;&amp; gear &lt; maxSp
    gear += accel*3;
if (keyboard_check(ord("S")) || keyboard_check(vk_down)) &amp;&amp; gear &gt; 0
    gear -= accel*3;
if (keyboard_check(ord("A")) || keyboard_check(vk_left))
    dir += turn;
if (keyboard_check(ord("D")) || keyboard_check(vk_right))
    dir -= turn;
    
if keyboard_check(ord("E")) &amp;&amp; ver &lt; maxSp/3{
    ver += accel;
    ascend = -1;
}
if keyboard_check(ord("Q")) &amp;&amp; ver &gt; -maxSp/3{
    ver -= accel;
    ascend = 1;
}
if ((ver &gt; 0) &amp;&amp; !keyboard_check(ord("E")))
    ver -= accel;
if ((ver &lt; 0) &amp;&amp; !keyboard_check(ord("Q")))
    ver += accel;

if (boost &gt; 0){
    if (capacitor &lt; capacitorMax*0.03){
        boost = 0;
    }else{
    particleSpawn(1, direction + 180, 8, sprSmokeSm, 0);
    maxSp *= 1.25;
    accel *= 3;
    gear = maxSp;
    capacitor -= capacitorMax*0.03
}
}
    
//check flight assists
if (!fa){
    if (speed &gt; gear)
    speed -= accel;
    motion_add(dir, accel);
    motion_add(270, accel/2)
}else{

if (!outSync &amp;&amp; !falling){
if (speed &gt; gear)
    speed -= accel;
else if (speed &lt; gear)
    speed += accel;
    
direction = dir;
}else{
if (speed &gt; gear)
    speed -= accel*2;
//else if (speed &lt; gear)
   // speed += accel;
    motion_add(dir, accel*2);
    
    if (!falling)
    direction = getTurn(direction, dir, turn/4)
    if !falling &amp;&amp; abs(angle_difference(dir, direction)) &lt; 20
        outSync = false;
}
}
    
    

Control.horSpeed = -hspeed;
Control.verSpeed = -vspeed - fall - lengthdir_y(ver, direction - 90);;

Control.horSpeed -= lengthdir_x(ver, direction - 90);
//y += lengthdir_y(ver, direction - 90);

x = xstart;
y = ystart;

image_angle = dir;

if (!fa)
    turn /= 2;

turn = tturn;

if (boost &gt; 0){
    maxSp /= 1.25;
    accel /= 3;
    boost --;
    gear = maxSp -1;
    if (boost &lt;= 0)
        boostCD = 120;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//col = c_orange;
if (room != game)
    exit;
event_inherited();

drawWhite(room_width - 200, 0, 200, 30, 0.3);
draw_text(room_width - 190, 3, "Score: " + string(score));
if (gamemode == 1)
    draw_text(room_width - 190, 14, "Wanted Level: " + string(round(score/300+1)));
else
    draw_text(room_width - 190, 14, "Alert (max 30): " + string(round(Control.dis/1500)));


icon = 32;

draw_set_alpha(0.2);
draw_set_color(c_white);
draw_rectangle(0,0, 32, 176, 0);
draw_set_color(c_black);
draw_set_alpha(1);

draw_sprite(sprHull, 0,16,16);
if (!shieldDown)
    draw_sprite(sprShield, 0, 16, 48);
else
    draw_sprite(sprShield, 1, 16, 48);
draw_sprite(sprSpeed, 0,16, 80);
draw_sprite(sprCapacitor, 0,16, 112);
draw_sprite(sprThermal, 0,16, 144);

//draw Bars
drawHB2((hp/300)*100, icon, 10, hpMax/300*100);
drawHB2((shield/200)*100, icon, 38, shieldMax/200*100);
drawHB2((capacitor/300)*100, icon, 112, capacitorMax/300*100);


//drawSpeed
draw_set_color(c_white);
draw_line_width_colour(0+icon, 70 + 10, 50+icon, 70 + 10, 4, c_black, c_aqua);
draw_line_width_colour(50+icon, 70 + 10, 100+icon,70 +  10, 4, c_aqua, c_black);
draw_set_alpha(0.5)
draw_healthbar(icon,70,100+icon,70 + 20, speed/maxSp*100, c_black, c_yellow, c_orange, 0, 1, 0);
draw_set_alpha(1)
draw_line(gear/maxSp*100+icon, 70, gear/maxSp*100+icon, 70 + 20);
draw_sprite(sprHandle,0,gear/maxSp*100+icon, 70 + 8);

yy = (1 - (Control.verCurrent + 1700)/2700)*200 + room_height/2 - 100;
draw_line(0, yy,50, yy);
draw_line(0, room_height/2 - 100, 0, room_height/2 + 100);
//draw_healthbar(0,25,100,45, (x - CarRace.x)/2200*100, c_black, c_red, c_green, 0, 1, 0);

if (Stop.activate)
    draw_text_colour(room_width/2, 0, "Red light ahead", c_red, c_red, c_red, c_red, 1);


draw_sprite_ext(sprCorner, 0, x - sprite_width/2.3 , y - sprite_height/2.3, 1, 1, 0, c_white, 1)
draw_sprite_ext(sprCorner, 1, x + sprite_width/2.3, y + sprite_height/2.3 , 1, 1, 0, c_white, 1)

col = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gear = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fa = false;
outSync = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fa = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
